/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'petra' at '8/3/17 6:40 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }

}

apply plugin: 'java'
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'commons-logging:commons-logging:1.1.1'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'org.slf4j:log4j-over-slf4j:1.7.25'
    compile 'org.slf4j:jcl-over-slf4j:1.7.25'
    
    compile 'org.eclipse.jgit:org.eclipse.jgit:4.8.0.201706111038-r'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = "net.petrabarus.periodic_git_sync.App"
jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}
